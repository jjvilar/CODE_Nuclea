================================================================================================
Configurando a pasta do repositório Git para rastreamento das mudanças, controle de acessos
================================================================================================
git config --global user.name "Juliano Vilar"
git config --global user.email "juliano.jose.vilar@gmail.com"

Para verificar
git config --global user.name
git config --global user.email

Outras configurações:
git config --list

===========================================================================
Inicializando um repositório Git
===========================================================================
- Crie uma pasta de trabalho no explorer
- Selecione essa pasta de trabalho
- Execute o "gitbash here" para abrir uma janela bash
- digite o comando git init e tecle <Enter>
- uma pasta .git será criada indicando que o repositório foi criado
- para listar o conteúdo da pasta digite ls
- para listar as pastas escondidas digite ls -a

===========================================================================
    Verificando status do repositório e adicionar arquivos
===========================================================================
Para verificar o Status, na linha de comando digite:
git status <Enter>
- os itens em vermelho ainda não foram adicionados no repositório.

Para adicionar os itens digite:
git add <nome do arquivo> (para apenas o arquivo que deseja adicionar)
ou 
git add . (se possuir muitos arquivos para adicionar)

Para verificar se o git relacionou os itens a serem adicionados no repositório
git status <Enter>
O git apresenta mensagem:
"On branch master
No commits yet
Changes to be committed:
(use "git rm --cached <files>... " to unstage)"
<relação de arquivos em verde>

Para efetivar os arquivos no repositório digite:
git commit -m "versão inicial" (pode ser qualquer tipo de comentário)

git status <Enter>
O git apresenta mensagem: "On branch master nothing to commit, working tree clean"

** Atenção **
Para apagar o repositório criado digite:
    rm -fr .git/
Remover o repositório implica em:
    - perder todo o repositório
    - perder todo o histórico
    - perder todo o rastreamento

===========================================================================
    Subindo o Projeto no GitHub
===========================================================================
Como verificar se um repositório está vinculado a um servidor remoto?
git remote -v

Associando o repositório a um servidor.
Para incializar e subir o Projeto no GitHub
git remote add origin <nome do repositório criado no Github>

git remote add origin https://github.com/jjvilar/CODE_Nuclea.git
git branch -M main
git push -u origin main

--------------------------------------
# Se houver algun conflito faça:
# Forçar o push (use com cuidado)
git push -f origin main

# Ou fazer um pull e resolver conflitos
git pull origin main --rebase
---------------------------------------

# Resolva os conflitos, se houver
git add .
git commit -m "Resolvendo conflitos de merge "
git push origin main

===========================================================================
    Subindo atualizações
===========================================================================

# Verificar se há alterações locais não commitadas
git status

# Commitar alterações locais (se houver)
git add .
git commit -m "Sua mensagem de commit"

# Enviar para o repositório remoto
use "git push" to publish your local commits

# Buscar atualizações do repositório remoto
git fetch

# Verificar o status em relação ao repositório remoto
git status

# Verificar o log de commits que estão no remoto e não no local
git log HEAD..origin/main --oneline

# Atualizar o repositório local com as mudanças do remoto
git pull origin main --rebase

# Resolver conflitos (se houver)
# Resolva os conflitos manualmente, depois:
git add .
git commit -m "Resolve merge conflicts"

# Enviar suas mudanças para o repositório remoto
git push origin main



